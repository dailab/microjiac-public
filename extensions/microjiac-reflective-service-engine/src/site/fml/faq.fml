<?xml version="1.0"?>
<!--

    MicroJIAC - A Lightweight Agent Framework
    This file is part of MicroJIAC Reflective-Service-Engine.

    Copyright (c) 2007-2012 DAI-Labor, Technische Universität Berlin

    This library includes software developed at DAI-Labor, Technische
    Universität Berlin (http://www.dai-labor.de)

    This library is free software: you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as published
    by the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this library.  If not, see <http://www.gnu.org/licenses/>.

-->
<faqs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://maven.apache.org/maven-1.x/plugins/faq/faq.xsd" title="Frequently Asked Questions" toplink="false">
    <part id="general">
        <title>General</title>
        <faq id="what">
            <question>What is the microjiac-service-engine module for?</question>
            <answer>
              <p>
				It offers an RPC-like mechanism to remotely invoke specific methods from
				a service interface.
              </p>
            </answer>
        </faq>
    </part>
    <part id="usage">
        <title>Usage</title>
        <faq id="how-use">
            <question>How do I use the microjiac-service-engine module?</question>
            <answer>
              <p>
				Define your service interfaces and implement the provider side. The client
				(= invoker) side uses the service interfaces through reflected or emulated
				proxies provided by the service engine.
				The service engine and an interaction manager are realised as agent elements
				and have to be included into the agent's configuration.
              </p>
            </answer>
        </faq>
    </part>
</faqs>
